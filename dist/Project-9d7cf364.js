import{_ as f,I as g,k as j,M as v,J as l,R as i,T as d,d as b,E as x,P as y,l as u,o as p,c as h,i as E,m as I,a as s,q as P,t as k,p as w,b as T,s as S}from"./index-c46c4c32.js";const q={data:()=>({image:g,error:!1,loading:!0,requests:[],projects:[],responses:{}}),watch:{title:{immediate:!0,handler:function(){document.title="hxAri Â· Projects"}}},mounted:async function(){var e=this,n=[{method:"GET",name:"projects",url:"https://raw.githubusercontent.com/hxAri/hxAri/main/projects.json"},{method:"GET",name:"profile",url:"https://api.github.com/users/hxAri"}];await j(n).then(r=>{v(r,async function(t,o){if(e.requests.push(o),o.status===200){var c=l.decode(o.response);e.responses[n[t].name]=c,n[t].name==="profile"&&(e.profile=c)}else e.error=i.StatusText(o.status)})}).catch(r=>e.error=d(r,XMLHttpRequest,()=>"No Internet Connection",()=>r));for(let r in e.responses.projects)await i("GET",b("https://api.github.com/repos/{}",e.responses.projects[r])).then(t=>{if(e.requests.push(t),t.status===200){var o=l.decode(t.response);e.responses[o.name]=o,e.projects.push(o)}else e.error=i.StatusText(t.status)}).catch(t=>e.error=d(t,XMLHttpRequest,()=>"No Internet Connection",()=>t));e.loading=!1},components:{Error:x,Project:y}},a=e=>(w("data-v-adb2467e"),e=e(),T(),e),M={key:0,class:"loading flex flex-center pd-24"},N=a(()=>s("div",{class:"animate"},[s("div",{class:"spinner"})],-1)),R=[N],$=a(()=>s("h3",{class:"title"},"Something Wrong",-1)),A={class:"sub-title"},B={key:2,class:"project flex flex-center"},C={class:"project-wrapper"},G={class:"project-groups pd-14"},H={class:"project-single pd-14"},V=a(()=>s("h2",{class:"title"},[s("i",{class:"bx bxs-flag mg-right-14"}),S("Projects ")],-1)),J=a(()=>s("hr",{class:"hr mg-top-14 mg-bottom-14"},null,-1)),L=a(()=>s("p",{class:"text mg-bottom-14"}," Here are some of the projects I've created and are still developing. Every project is open source anyone can use it or contribute if interesting, don't forget to let others know if it's useful. ",-1));function X(e,n,r,t,o,c){const _=u("Error"),m=u("Project",!0);return e.loading?(p(),h("div",M,R)):e.error?(p(),E(_,{key:1},{default:I(()=>[$,s("p",A,k(e.error),1)]),_:1})):(p(),h("div",B,[s("div",C,[s("div",G,[s("div",H,[V,J,L,P(m,{profile:e.profile,projects:e.projects,image:e.image},null,8,["profile","projects","image"])])])])]))}const F=f(q,[["render",X],["__scopeId","data-v-adb2467e"]]);export{F as default};
